<?php

namespace Bluehost\Maestro;

use WP_Error;

// Register the BH Maestro status field on the users endpoints
add_action(
	'rest_api_init',
	function() {
		// Only add this field for administrators
		if ( current_user_can( 'edit_users' ) ) {
			register_rest_field(
				'user',
				'bh_maestro',
				array(
					'get_callback'    => __NAMESPACE__ . '\\rest_is_user_maestro',
					'update_callback' => __NAMESPACE__ . '\\rest_update_maestro_key',
				)
			);
		}
	}
);

/**
 * Returns the BH Maestro Web Pro status of a specific user
 *
 * @param array $user An array of user data as returned from the REST API
 *
 * @return boolean
 */
function rest_is_user_maestro( $user ) {

	return is_user_maestro( $user['id'] );

}

/**
 * Callback to update the BH Maestro identifier key and adjust user role
 *
 * @param string $key    The BH Maestro identifier key generated by the BH Maestro system
 * @param object|WP_User The User to update the maestro key for
 */
function rest_update_maestro_key( $key, $user ) {

	$key = sanitize_text_field( $key );

	// If the supplied key is falsey, we'll trigger revocation of Maestro status
	// Otherwise we attempt to update it
	if ( ! $key ) {
		$status = revoke_maestro( $user->ID );
	} else {
		$status = update_maestro_key( $user->ID, $key );
	}

	// Return an error if the update failed for some reason
	if ( false === $status || is_wp_error( $status ) ) {
		return new WP_Error(
			'rest_user_maestro_update_failed',
			__( 'Failed to modify maestro status.' ),
			array( 'status' => 500 )
		);
	}

	return true;

}
